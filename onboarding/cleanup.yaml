---
- name: Cleanup everything
  hosts: 127.0.0.1
  connection: local
  gather_facts: no
  roles:
    - common
  vars:
    vim: icp

  tasks:

# Check VIMs
    - name: List VIMs
      uri:
        url: http://{{ ob }}:8080/api/v1/datacenters
        headers:
          Authorization: Bearer {{ token['json']['access_token'] }}
          project-id: "{{ project_id['json'][0]['id'] }}"
      register: datacenters
    - name: Output existing VIM names
      debug:
        var: datacenters.json|map(attribute='name')|list
      tags: [ never, debug ]
    - name: For test
      copy:
        content: "{{ datacenters }}"
        dest: datacenters.raw
      tags: [ never, raw ]
    - name: VIM not existing
      debug:
        msg: "Vim named {{ vim }} does not exist"
      when: datacenters.json|selectattr('name', 'equalto', vim)|list|length==0
    - name: Delete vim if exists
      uri:
        url: http://{{ ob }}:8080/api/v1/datacenters/{{ datacenters.json|selectattr('name', 'equalto', vim)|map(attribute='id')|list|first }}
        method: DELETE
        status_code: [204]
        headers:
          Authorization: Bearer {{ token['json']['access_token'] }}
          project-id: "{{ project_id['json'][0]['id'] }}"
      when: datacenters.json|selectattr('name', 'equalto', vim)|list|length>0




